# Docker Compose file for Stackstorm with MongoDB, RabbitMQ, and PostgreSQL
# GitHub: https://github.com/vintagedon/docker-compose-cookbook/automation-orchestration/stackstorm-mongodb-rabbitmq-postgres
# Description: This Docker Compose file sets up a Stackstorm instance with MongoDB, RabbitMQ, and PostgreSQL, all with customizable configuration.

version: '3'
services:
  stackstorm:
    image: stackstorm/stackstorm:${ST2_VERSION:-latest}
    container_name: ${CONTAINER_NAME:-stackstorm}
    env_file:
      - .env
    ports:
      - "${ST2_WEB_PORT:-443}:443"
    volumes:
      - stackstorm-packs:/opt/stackstorm/packs
      - stackstorm-config:/etc/st2
      - stackstorm-logs:/var/log/st2
    environment:
      - ST2_AUTH_USERNAME=${ST2_AUTH_USERNAME}
      - ST2_AUTH_PASSWORD=${ST2_AUTH_PASSWORD}
      - ST2_OAUTH_API_KEY=${ST2_OAUTH_API_KEY:-}
    depends_on:
      - mongodb
      - rabbitmq
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "st2ctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:${MONGO_VERSION:-4.4}
    container_name: stackstorm-mongodb
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION:-3.8-management}
    container_name: stackstorm-rabbitmq
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped

  postgres:
    image: postgres:${POSTGRES_VERSION:-13}
    container_name: stackstorm-postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  stackstorm-packs:
  stackstorm-config:
  stackstorm-logs:
  mongo-data:
  rabbitmq-data:
  postgres-data:

networks:
  default:
    name: stackstorm_network
