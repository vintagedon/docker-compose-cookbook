# Docker Compose file for Gogs with PostgreSQL
# GitHub: https://github.com/vintagedon/docker-compose-cookbook/development-ci-cd/gogs-postgresql
# Description: This Docker Compose file sets up a Gogs instance with PostgreSQL backend and customizable configuration.

version: "3.8"
services:
  gogs:
    container_name: ${GOGS_CONTAINER_NAME:-gogs}
    image: gogs/gogs:latest
    ports:
      - "${GOGS_PORT:-3000}:3000"
      - "${GOGS_SSH_PORT:-22}:22"
    volumes:
      - ${USE_NAMED_VOLUMES:-false} == true ? gogs_data:/data : gogs_data:/data
      - ${USE_NAMED_VOLUMES:-false} == true ? gogs_config:/app/gogs/custom : gogs_config:/app/gogs/custom
    environment:
      - GOGS_APP_NAME=${GOGS_APP_NAME:-Gogs}
      - GOGS_RUN_MODE=${GOGS_RUN_MODE:-prod}
      - GOGS_DOMAIN=${GOGS_DOMAIN:-localhost}
      - GOGS_SSH_PORT=${GOGS_SSH_PORT:-22}
      - GOGS_SECRET_KEY=${GOGS_SECRET_KEY:-}
      - GOGS_DISABLE_REGISTRATION=${GOGS_DISABLE_REGISTRATION:-false}
      - GOGS_REQUIRE_SIGNIN_VIEW=${GOGS_REQUIRE_SIGNIN_VIEW:-false}
    restart: unless-stopped
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME:-gogs-postgres}
    image: postgres:13
    volumes:
      - ${USE_NAMED_VOLUMES:-false} == true ? postgres_data:/var/lib/postgresql/data : postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-gogs}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-gogspassword}
      - POSTGRES_DB=${POSTGRES_DB:-gogs}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-gogs}"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  gogs_data:
  gogs_config:
  postgres_data:

networks:
  default:
    name: gogs_network
